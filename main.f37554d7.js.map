{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","markup","document","body","insertAdjacentHTML","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,EAAQI,iBAAiBH,EAAW,WAElCE,EAAkBF,UAAAA,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GAAhF,UAKN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAiCD,wBAAAA,OAAAA,EAAvC,UAEAE,SAASC,KAAKC,mBAAmB,YAAaH,IAGhDI,OAAOC,QAAU,CACff,QAAAA,EACAQ,aAAAA","file":"main.f37554d7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    element.addEventListener(eventName, () => {\n      // eslint-disable-next-line max-len\n      resolve(`It was ${eventName} on the element: ${element.nodeName}, id: ${element.id}.`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const markup = `<div class=\"message\">${message}</div>`;\n\n  document.body.insertAdjacentHTML('beforeend', markup);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}